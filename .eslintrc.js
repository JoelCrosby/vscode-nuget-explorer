/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "prettier",
        "prettier/@typescript-eslint"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module"
    },
    "plugins": [
        "eslint-plugin-import",
        "eslint-plugin-jsdoc",
        "eslint-plugin-prefer-arrow",
        "@typescript-eslint",
        "@typescript-eslint/tslint"
    ],
    "rules": {
        "@typescript-eslint/array-type": [
            "warn",
            {
                "default": "array-simple"
            }
        ],
        "@typescript-eslint/ban-ts-comment": "warn",
        "@typescript-eslint/ban-types": [
            "warn",
            {
                "types": {
                    "Object": {
                        "message": "Use {} instead."
                    },
                    "String": {
                        "message": "Use 'string' instead."
                    },
                    "Number": {
                        "message": "Use 'number' instead."
                    },
                    "Boolean": {
                        "message": "Use 'boolean' instead."
                    }
                }
            }
        ],
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "no-public"
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "warn",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/naming-convention": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-namespace": "warn",
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/semi": [
            "warn",
            "always"
        ],
        "@typescript-eslint/triple-slash-reference": "warn",
        "arrow-body-style": "warn",
        "comma-dangle": [
            "warn",
            {
                "objects": "always-multiline",
                "arrays": "always-multiline",
                "functions": "never"
            }
        ],
        "curly": [
            "warn",
            "multi-line"
        ],
        "default-case": "warn",
        "eqeqeq": [
            "warn",
            "smart"
        ],
        "guard-for-in": "warn",
        "id-denylist": [
            "warn",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        "id-match": "warn",
        "import/no-default-export": "warn",
        "import/no-deprecated": "warn",
        "jsdoc/check-alignment": "warn",
        "jsdoc/check-indentation": "warn",
        "jsdoc/newline-after-description": "warn",
        "new-parens": "warn",
        "no-caller": "warn",
        "no-cond-assign": "warn",
        "no-debugger": "warn",
        "no-new-wrappers": "warn",
        "no-redeclare": "warn",
        "no-return-await": "warn",
        "no-throw-literal": "warn",
        "no-underscore-dangle": "warn",
        "no-unsafe-finally": "warn",
        "no-unused-expressions": "warn",
        "no-unused-labels": "warn",
        "no-var": "warn",
        "object-shorthand": "warn",
        "prefer-arrow/prefer-arrow-functions": "warn",
        "prefer-const": "warn",
        "radix": "warn",
        "semi": "warn",
        "use-isnan": "warn",
        "@typescript-eslint/tslint/config": [
            "error",
            {
                "rules": {
                    "ban": [
                        true,
                        {
                            "name": [
                                "it",
                                "skip"
                            ]
                        },
                        {
                            "name": [
                                "it",
                                "only"
                            ]
                        },
                        {
                            "name": [
                                "it",
                                "async",
                                "skip"
                            ]
                        },
                        {
                            "name": [
                                "it",
                                "async",
                                "only"
                            ]
                        },
                        {
                            "name": [
                                "describe",
                                "skip"
                            ]
                        },
                        {
                            "name": [
                                "describe",
                                "only"
                            ]
                        },
                        {
                            "name": "parseInt",
                            "message": "tsstyle#type-coercion"
                        },
                        {
                            "name": "parseFloat",
                            "message": "tsstyle#type-coercion"
                        },
                        {
                            "name": "Array",
                            "message": "tsstyle#array-constructor"
                        },
                        {
                            "name": [
                                "*",
                                "innerText"
                            ],
                            "message": "Use .textContent instead. tsstyle#browser-oddities"
                        }
                    ]
                }
            }
        ]
    }
};
